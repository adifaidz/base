<?php

namespace {{namespace}};

use Illuminate\Http\Request;
use Validator;
use {{rootnamespace}}Http\Controllers\Controller;
use {{modelnamespace}};
use {{transformernamespace}}Transformer;

class {{class}} extends Controller
{

    function __construct({{modelclass}}Transformer $transformer)
    {
        $this->transformer = $transformer;
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        return view('{{viewpath}}.index');
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('{{viewpath}}.create')->with($this->getFormReference());
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $this->validator($request->all())->validate();

        ${{modelname}} = new {{modelclass}};
        // Your create logic here
        ${{modelname}}->save();

        return redirect()->route('{{viewpath}}.index');
    }

    /**
     * Display the specified resource.
     *
     * @param  int  ${{modelname}}
     * @return \Illuminate\Http\Response
     */
    public function show({{modelclass}} ${{modelname}})
    {
        ${{modelname}}Json = json_encode($this->transformer->transform(${{modelname}}));
        return view('{{viewpath}}.show',compact('{{modelname}}', '{{modelname}}Json'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  ${{modelname}}
     * @return \Illuminate\Http\Response
     */
    public function edit({{modelclass}} ${{modelname}})
    {
        ${{modelname}}Json = json_encode($this->transformer->transform(${{modelname}}));
        return view('{{viewpath}}.edit',compact('{{modelname}}', '{{modelname}}Json'))->with($this->getFormReference());
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  ${{modelname}}
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, {{modelclass}} ${{modelname}})
    {
        $this->validator($request->all())->validate();

        // Your update logic here
        ${{modelname}}->save();

        return redirect()->route('{{viewpath}}.show', ['id' => ${{modelname}}->id]);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  ${{modelname}}
     * @return \Illuminate\Http\Response
     */
    public function destroy({{modelclass}} ${{modelname}})
    {
        ${{modelname}}->delete();

        if(request()->ajax())
          return ${{modelname}};

        return view('{{viewpath}}.index');
    }

    public function getFormReference()
    {
      return [];
    }

    public function validator(array $data)
    {
      return Validator::make($data, []);
    }
}
